//Itrastat
external inner procedure HT2Per(Date, Date , var string);
external inner function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);

procedure ColLineFillup(string invdate,string invno,string artcode,string artname,string intrartcode,string intrartname,string unitcode,string qtystr,string weightstr,string salespstr,
						  val qty, val netweight,val salesprice,val sumwithdisc,string currcode,string pricewithdisc,string cucountry,string deldeal,integer headerflag)
begin
  StartFormat(15);
  OutString(0,0,invdate,false);
  OutString(40,0,invno,false);
  OutString(80,0,artcode,false);
  OutString(120,0,artname,false);
  OutString(160,0,intrartcode,false);
  OutString(200,0,intrartname,false);
  OutString(240,0,unitcode,false);
  if headerflag == 0 then begin
    OutString(280,0,qtystr,true);
    OutString(320,0,weightstr,true);
    OutString(350,0,salespstr,true);
  end else begin
    OutVal(280,0,qty,M4UVal,true);
    OutVal(320,0,netweight,M4UVal,true);
    OutVal(350,0,salesprice,M4UVal,true);
  end;

  OutString(360,0,currcode,false);
	if headerflag == 0 then begin
		OutString(400,0,pricewithdisc,true);
	end else begin
		OutVal(400,0,sumwithdisc,M4Val,true);
	end;
  OutString(410,0,cucountry,false);
  OutString(440,0,deldeal,false);
  EndFormat;
  return;
end;

function longint GetCreditedInvoiceNr(record IVVc IVr)
begin
	longint res;
	row IVVc IVrw;
	integer i,rwc;

	rwc = MatRowCnt(IVr);
	for(i=0;i<rwc;i=i+1)begin
	  MatRowGet(IVr,i,IVrw);
		if IVrw.stp==kInvoiceRowTypeCredit then begin
			res = IVrw.OrdRow;
			i = rwc;
		end;
	end;

	GetCreditedInvoiceNr = res;
	return;
end;

global
procedure StengelIntrasRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record INVc INr;
  record CommodityVc Commr;
  record IVVc IVr,orgIVr;
  record STG_SettingBlock STG_Settingr;
  row IVVc IVrw;
  string 255 tstr;
  integer rw, cnt,i;
  boolean TrHs,printf,testf;
  val bval,weight,price,rowsum;

  BlockLoad(STG_Settingr);

  rw = 1;
  StartReportJob("Eksporto intrastato ataskaita - Stengel");
   SetLangMode(LangLithuanian,"LIT",2);
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = "Kalba: " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  ColLineFillup("Pardavimo","Faktūros","Prekės","Prekės","Intrastato", "Intrastato","Mato","Kiekis","Neto", "Pardavimo",
								bval,bval,bval,bval,"Pardavimo","Suma EUR","Pirkėjo","Pristatymo",0);
  ColLineFillup("data","nr.","kodas","pavadinimas","prekės","prekės","vnt.","","svoris,kg","kaina",
								bval,bval,bval,bval,"valiuta","įskaitant nuolaidą","šalis","sąlygos",0);
  ColLineFillup("","","","","kodas","aprašymas","","","","",
								bval,bval,bval,bval,"","","","INCOTERMS",0);
   Black_Divider(0,1);
  TrHs = true;
  IVr.InvDate = RepSpec.sStartDate;
  while LoopKey("InvDate",IVr,1,TrHs) begin
    testf = true;
    if (IVr.InvDate>RepSpec.sEndDate) then begin TrHs = false; end;
    if (TrHs==false) then begin testf = false; end;
    if (IVr.OKFlag !=1)  then begin testf = false; end;
    if nonblank(RepSpec.f1) and (IVr.LangCode !=RepSpec.f1)  then begin testf = false; end;
    if (testf) then begin
	  	resetLoop(CUr);
	  	CUr.Code = IVr.CustCode;
			printf = false;
		  if ReadFirstMain(CUr,1,true) then begin end;
      cnt = MatRowCnt(IVr);
      for (i=0;i<cnt;i=i+1) begin
				MatRowGet(IVr,i,IVrw);
		    if (IVrw.ArtCode != "") then begin
		      resetLoop(INr);
		      INr.Code = IVrw.ArtCode;
		      if ReadFirstMain(INr,1,true) then begin
		        ResetLoop(INr);
		        Commr.Number = INr.EUCodex;
		        if ReadFirstMain(Commr,1,true) then begin end;
		      end;
          if STG_Settingr.InvWeightFlag == 1 then begin
            weight = IVrw.STG_Weight;
          end else begin
  		      weight = IVrw.Quant;
  		      if INr.NetWeight>0 then begin
  		        weight = IVrw.Quant * INr.NetWeight;
  		      end;
          end;
		      price = IVrw.Price;
					rowsum = IVrw.Sum;
		      if IVr.InvType == 3 then begin
						price = -price;
						rowsum = -rowsum;
					end;
					printf = true;
					rowsum = MulRateToBase1(IVr.CurncyCode,rowsum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
		  		ColLineFillup(IVr.InvDate,IVr.SerNr,IVrw.ArtCode,IVrw.Spec,INr.EUCodex,Commr.Comment,IVrw.UnitCode,"","","",
												IVrw.Quant,weight,price,rowsum,IVr.CurncyCode,"",CUr.CountryCode,IVr.ShipDeal,1);
				end;
	  	end;
			if IVr.InvType==3 and printf then begin
				orgIVr.SerNr = GetCreditedInvoiceNr(IVr);
				if ReadFirstMain(orgIVr,1,true) then begin
					ColLineFillup(IVr.InvDate,IVr.SerNr,"AMENDMENT","Invoice No. " & orgIVr.SerNr & "(" & DateToString(orgIVr.InvDate,"YYYY-MM-DD") & ")","","","","","","",
											0,0,blankval,0,IVr.CurncyCode,"",CUr.CountryCode,IVr.ShipDeal,1);
				end;
			end;
    end;
	end;
  Black_Divider(0,1);
  EndJob;
  return;
end;
